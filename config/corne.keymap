/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    behaviors {
        homerow_mods: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
    };

    combos {
        compatible = "zmk,combos";

        caps_lock {
            bindings = <&kp CAPSLOCK>;
            key-positions = <22>;
            layers = <0>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        mac {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&trans  &kp Q                       &kp W                  &kp E                     &kp R                 &kp T                               &kp Y                          &kp U                 &kp I                      &kp O                          &kp P                                &trans
&trans  &homerow_mods LEFT_SHIFT S  &homerow_mods LCTRL S  &homerow_mods LEFT_ALT D  &homerow_mods LGUI F  &homerow_mods LS(LC(LA(LGUI))) G    &homerow_mods LS(LA(RCTRL)) H  &homerow_mods RGUI J  &homerow_mods RIGHT_ALT K  &homerow_mods RIGHT_CONTROL L  &homerow_mods RIGHT_SHIFT SEMICOLON  &trans
&trans  &kp Z                       &kp X                  &kp C                     &kp V                 &kp B                               &kp N                          &kp M                 &kp COMMA                  &kp DOT                        &kp FSLH                             &trans
                                                           &kp BACKSPACE             &mo 2                 &kp SPACE                           &kp RET                        &mo 3                 &kp DELETE
            >;
        };

        windows {
            bindings = <
&trans  &trans  &trans                &trans  &trans                        &trans    &trans  &trans                         &trans  &trans                &trans  &trans
&trans  &trans  &homerow_mods LGUI S  &trans  &homerow_mods LEFT_CONTROL F  &trans    &trans  &homerow_mods RIGHT_CONTROL J  &trans  &homerow_mods RGUI L  &trans  &trans
&trans  &trans  &trans                &trans  &trans                        &trans    &trans  &trans                         &trans  &trans                &trans  &trans
                                      &trans  &trans                        &trans    &trans  &trans                         &trans
            >;
        };

        num_symbol {
            bindings = <
&trans  &kp EXCLAMATION                  &kp AT_SIGN   &kp HASH   &kp LEFT_BRACE        &kp RIGHT_BRACE          &kp SEMI  &kp N7  &kp N8  &kp N9  &kp PLUS   &trans
&trans  &homerow_mods LEFT_SHIFT DOLLAR  &kp PERCENT   &kp CARET  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS    &kp BSLH  &kp N4  &kp N5  &kp N6  &kp EQUAL  &trans
&trans  &kp AMPERSAND                    &kp ASTERISK  &kp GRAVE  &kp LBKT              &kp RBKT                 &kp N0    &kp N1  &kp N2  &kp N3  &kp MINUS  &trans
                                                       &trans     &trans                &trans                   &trans    &trans  &trans
            >;

            label = "numbers & symbols";
        };

        arrow_func {
            bindings = <
&trans  &trans  &kp F7  &kp F8  &kp F9  &kp F10    &trans                  &kp PG_DN               &kp PG_UP             &trans                   &trans  &trans
&trans  &trans  &kp F4  &kp F5  &kp F6  &kp F11    &kp LEFT                &kp DOWN                &kp UP                &kp RIGHT                &trans  &trans
&trans  &trans  &kp F1  &kp F2  &kp F3  &kp F12    &kp LA(LG(LEFT_ARROW))  &kp LA(LG(DOWN_ARROW))  &kp LA(LG(UP_ARROW))  &kp LA(LG(RIGHT_ARROW))  &trans  &trans
                        &trans  &trans  &kp TAB    &trans                  &trans                  &trans
            >;
        };

        config_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3   &bt BT_SEL 4    &trans  &kp C_PREVIOUS  &kp C_PLAY_PAUSE  &kp C_NEXT         &trans                &trans
&trans  &bt BT_CLR    &trans        &trans        &bt BT_DISC 3  &trans          &trans  &trans          &trans            &kp C_VOLUME_UP    &kp C_BRIGHTNESS_INC  &trans
&trans  &to 0         &to 1         &trans        &trans         &trans          &trans  &trans          &trans            &kp C_VOLUME_DOWN  &kp C_BRIGHTNESS_DEC  &trans
                                    &trans        &trans         &trans          &trans  &trans          &trans
            >;

            label = "config layer";
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        conifg_layer {
            if-layers = <2 5>;
            then-layer = <5>;
        };
    };
};
